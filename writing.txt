Write a brief reflection on the resources you examined. What did you like about it? Was it easy to use? Helpful? What information do you wish each had provided that was missing? The idea is to think about what is needed for a code resource to be useful. Later, when you are contributing to code resources or creating your own, this step will guide you to ensure your work is accessible and easily understood and adapted.

I explored the Bayesian Network Graph in AISpace2. Graphically it was interesting. Showing the probabilities of a netwrk given observed facts. Initially I figured adding unit test to make sure that values computed were correct, and so started by modeling the monty hall problem. Issues arose as i could not track down the actual bayesian math calculations for each node. I pivoted, finding the pomegranate library with contained a Bayesian Network class. I modeled the Monty hall problem with this library, and found it lacking the fancy gui of the one implemented in AISpace2. I decided that I would add some sort of gui functionaloty to the library to better understand the results being printed out by the Class object.

A
A Bayesian Network is a fancy connection of possibilities and assumptions. The best way to describe it is using an example. Lets say a possibility is something like "if your shoes are wet then there was a 50/50 chance you either stepped in a puddle or it rained." We can also add a "there is a 90% chance for Sunny weather and 10% chance for rain." In this case the weather is connected to the assumtion about the shoes. Lets say now that it rained. Because of this new info we can now say that the reason the shoes are wet is because of rain is 100%. it also works backwards. If we say shoes are wet, then we can increase the chance that it is probably raining. 


b
A Bayesian Network is a 
